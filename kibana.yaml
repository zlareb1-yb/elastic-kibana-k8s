apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: qa-log-analyzer
data:
  kibana.yml: |-
    server.name: qa-log-analyzer.dev.yugabyte.com
    server.host: 0.0.0.0
    elasticsearch.hosts: [ "http://elasticsearch:9200" ]
    monitoring.ui.container.elasticsearch.enabled: true
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "kibana"
  namespace: qa-log-analyzer
  labels:
    app: "kibana"
  annotations:
    networking.gke.io/load-balancer-type: "Internal"
    networking.gke.io/internal-load-balancer-allow-global-access: "true"
spec:
  type: LoadBalancer
  loadBalancerIP: 10.150.2.55
  externalTrafficPolicy: Cluster
  selector:
    app: kibana
  ports:
    - port: 80
      targetPort: 5601
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: qa-log-analyzer
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:8.11.3
          volumeMounts:
            - name: pipeline
              mountPath: /usr/share/kibana/config/kibana.yml
              subPath: kibana.yml
              readOnly: true
          resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 200m
          ports:
            - containerPort: 5601
      volumes:
        - name: pipeline
          configMap:
            name: kibana-config
            items:
              - key: kibana.yml
                path: kibana.yml
